# .github/workflows/ci.yml
name: Monorepo tests

on:
  push:
  pull_request:

jobs:
  changes:
    runs-on: ubuntu-latest
    environment: production
    outputs:
      firebase-vercel: ${{ steps.filter.outputs.firebase-vercel }}
      koa: ${{ steps.filter.outputs.koa }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            firebase-vercel:
              - 'firebase-vercel/**'
            koa:
              - 'koa/**'

  test-firebase-vercel:
    needs: changes
    if: needs.changes.outputs.firebase-vercel == 'true'
    runs-on: ubuntu-latest
    env:
      # Add your environment variables here for testing
      apiKey: ${{ secrets.FIREBASE_API_KEY }}
      appId: ${{ secrets.FIREBASE_APP_ID }}
      authDomain: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
      messagingSenderId: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
      projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
      storageBucket: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: pnpm/action-setup@v3
        with:
          version: 10
      - run: cd firebase-vercel && pnpm install && pnpm test

  test-koa:
    needs: changes
    if: needs.changes.outputs.koa == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: pnpm/action-setup@v3
        with:
          version: 10
      - run: |
          echo "FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}"
          echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}"
          echo "FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}"
          echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}"
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}"
          echo "FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}"
      - run: cd koa && pnpm install && pnpm test

  deploy-firebase-vercel:
    needs: [changes, test-firebase-vercel]
    if: needs.changes.outputs.firebase-vercel == 'true' 
    # && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy to Vercel
        run: |
          cd firebase-vercel

          # # Create .env file with GitHub secrets
          # echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env.production.local
          # echo "FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> .env.production.local
          # echo "NODE_ENV=production" >> .env.production.local

          # Deploy to production
          
          vercel --prod --token ${{ secrets.VERCEL_TOKEN }} \
          --env apiKey=${{ secrets.FIREBASE_API_KEY }} \
          --env appId=${{ secrets.FIREBASE_APP_ID }} \
          --env authDomain=${{ secrets.FIREBASE_AUTH_DOMAIN }} \
          --env messagingSenderId=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }} \
          --env projectId=${{ secrets.FIREBASE_PROJECT_ID }} \
          --env storageBucket=${{ secrets.FIREBASE_STORAGE_BUCKET }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
